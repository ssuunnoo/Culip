{"ast":null,"code":"var _jsxFileName = \"/Users/sunoo/Projects/Aiiim/src/components/css/changePngColor.js\";\n//301줄 부터 컴포넌트\nimport arrow from '../../assets/mypageArrow.png';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Color {\n  constructor(r, g, b) {\n    this.set(r, g, b);\n  }\n  toString() {\n    return `rgb(${Math.round(this.r)}, ${Math.round(this.g)}, ${Math.round(this.b)})`;\n  }\n  set(r, g, b) {\n    this.r = this.clamp(r);\n    this.g = this.clamp(g);\n    this.b = this.clamp(b);\n  }\n  hueRotate() {\n    let angle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    angle = angle / 180 * Math.PI;\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n    this.multiply([0.213 + cos * 0.787 - sin * 0.213, 0.715 - cos * 0.715 - sin * 0.715, 0.072 - cos * 0.072 + sin * 0.928, 0.213 - cos * 0.213 + sin * 0.143, 0.715 + cos * 0.285 + sin * 0.140, 0.072 - cos * 0.072 - sin * 0.283, 0.213 - cos * 0.213 - sin * 0.787, 0.715 - cos * 0.715 + sin * 0.715, 0.072 + cos * 0.928 + sin * 0.072]);\n  }\n  grayscale() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    this.multiply([0.2126 + 0.7874 * (1 - value), 0.7152 - 0.7152 * (1 - value), 0.0722 - 0.0722 * (1 - value), 0.2126 - 0.2126 * (1 - value), 0.7152 + 0.2848 * (1 - value), 0.0722 - 0.0722 * (1 - value), 0.2126 - 0.2126 * (1 - value), 0.7152 - 0.7152 * (1 - value), 0.0722 + 0.9278 * (1 - value)]);\n  }\n  sepia() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    this.multiply([0.393 + 0.607 * (1 - value), 0.769 - 0.769 * (1 - value), 0.189 - 0.189 * (1 - value), 0.349 - 0.349 * (1 - value), 0.686 + 0.314 * (1 - value), 0.168 - 0.168 * (1 - value), 0.272 - 0.272 * (1 - value), 0.534 - 0.534 * (1 - value), 0.131 + 0.869 * (1 - value)]);\n  }\n  saturate() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    this.multiply([0.213 + 0.787 * value, 0.715 - 0.715 * value, 0.072 - 0.072 * value, 0.213 - 0.213 * value, 0.715 + 0.285 * value, 0.072 - 0.072 * value, 0.213 - 0.213 * value, 0.715 - 0.715 * value, 0.072 + 0.928 * value]);\n  }\n  multiply(matrix) {\n    const newR = this.clamp(this.r * matrix[0] + this.g * matrix[1] + this.b * matrix[2]);\n    const newG = this.clamp(this.r * matrix[3] + this.g * matrix[4] + this.b * matrix[5]);\n    const newB = this.clamp(this.r * matrix[6] + this.g * matrix[7] + this.b * matrix[8]);\n    this.r = newR;\n    this.g = newG;\n    this.b = newB;\n  }\n  brightness() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    this.linear(value);\n  }\n  contrast() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    this.linear(value, -(0.5 * value) + 0.5);\n  }\n  linear() {\n    let slope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let intercept = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.r = this.clamp(this.r * slope + intercept * 255);\n    this.g = this.clamp(this.g * slope + intercept * 255);\n    this.b = this.clamp(this.b * slope + intercept * 255);\n  }\n  invert() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    this.r = this.clamp((value + this.r / 255 * (1 - 2 * value)) * 255);\n    this.g = this.clamp((value + this.g / 255 * (1 - 2 * value)) * 255);\n    this.b = this.clamp((value + this.b / 255 * (1 - 2 * value)) * 255);\n  }\n  hsl() {\n    // Code taken from https://stackoverflow.com/a/9493060/2688027, licensed under CC BY-SA.\n    const r = this.r / 255;\n    const g = this.g / 255;\n    const b = this.b / 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h,\n      s,\n      l = (max + min) / 2;\n    if (max === min) {\n      h = s = 0;\n    } else {\n      const d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n        default:\n          //일단 넣어둠\n          h = 0;\n      }\n      h /= 6;\n    }\n    return {\n      h: h * 100,\n      s: s * 100,\n      l: l * 100\n    };\n  }\n  clamp(value) {\n    if (value > 255) {\n      value = 255;\n    } else if (value < 0) {\n      value = 0;\n    }\n    return value;\n  }\n}\nclass Solver {\n  constructor(target, baseColor) {\n    this.target = target;\n    this.targetHSL = target.hsl();\n    this.reusedColor = new Color(0, 0, 0);\n  }\n  solve() {\n    const result = this.solveNarrow(this.solveWide());\n    return {\n      values: result.values,\n      loss: result.loss,\n      filter: this.css(result.values)\n    };\n  }\n  solveWide() {\n    const A = 5;\n    const c = 15;\n    const a = [60, 180, 18000, 600, 1.2, 1.2];\n    let best = {\n      loss: Infinity\n    };\n    for (let i = 0; best.loss > 25 && i < 3; i++) {\n      const initial = [50, 20, 3750, 50, 100, 100];\n      const result = this.spsa(A, a, c, initial, 1000);\n      if (result.loss < best.loss) {\n        best = result;\n      }\n    }\n    return best;\n  }\n  solveNarrow(wide) {\n    const A = wide.loss;\n    const c = 2;\n    const A1 = A + 1;\n    const a = [0.25 * A1, 0.25 * A1, A1, 0.25 * A1, 0.2 * A1, 0.2 * A1];\n    return this.spsa(A, a, c, wide.values, 500);\n  }\n  spsa(A, a, c, values, iters) {\n    const alpha = 1;\n    const gamma = 0.16666666666666666;\n    let best = null;\n    let bestLoss = Infinity;\n    const deltas = new Array(6);\n    const highArgs = new Array(6);\n    const lowArgs = new Array(6);\n    for (let k = 0; k < iters; k++) {\n      const ck = c / Math.pow(k + 1, gamma);\n      for (let i = 0; i < 6; i++) {\n        deltas[i] = Math.random() > 0.5 ? 1 : -1;\n        highArgs[i] = values[i] + ck * deltas[i];\n        lowArgs[i] = values[i] - ck * deltas[i];\n      }\n      const lossDiff = this.loss(highArgs) - this.loss(lowArgs);\n      for (let i = 0; i < 6; i++) {\n        const g = lossDiff / (2 * ck) * deltas[i];\n        const ak = a[i] / Math.pow(A + k + 1, alpha);\n        values[i] = fix(values[i] - ak * g, i);\n      }\n      const loss = this.loss(values);\n      if (loss < bestLoss) {\n        best = values.slice(0);\n        bestLoss = loss;\n      }\n    }\n    return {\n      values: best,\n      loss: bestLoss\n    };\n    function fix(value, idx) {\n      let max = 100;\n      if (idx === 2 /* saturate */) {\n        max = 7500;\n      } else if (idx === 4 /* brightness */ || idx === 5 /* contrast */) {\n        max = 200;\n      }\n      if (idx === 3 /* hue-rotate */) {\n        if (value > max) {\n          value %= max;\n        } else if (value < 0) {\n          value = max + value % max;\n        }\n      } else if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n      return value;\n    }\n  }\n  loss(filters) {\n    // Argument is array of percentages.\n    const color = this.reusedColor;\n    color.set(0, 0, 0);\n    color.invert(filters[0] / 100);\n    color.sepia(filters[1] / 100);\n    color.saturate(filters[2] / 100);\n    color.hueRotate(filters[3] * 3.6);\n    color.brightness(filters[4] / 100);\n    color.contrast(filters[5] / 100);\n    const colorHSL = color.hsl();\n    return Math.abs(color.r - this.target.r) + Math.abs(color.g - this.target.g) + Math.abs(color.b - this.target.b) + Math.abs(colorHSL.h - this.targetHSL.h) + Math.abs(colorHSL.s - this.targetHSL.s) + Math.abs(colorHSL.l - this.targetHSL.l);\n  }\n  css(filters) {\n    function fmt(idx) {\n      let multiplier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      return Math.round(filters[idx] * multiplier);\n    }\n    return [fmt(0), fmt(1), fmt(2), fmt(3), fmt(4), fmt(5)];\n    //`filter: invert(${fmt(0)}%) sepia(${fmt(1)}%) saturate(${fmt(2)}%) hue-rotate(${fmt(3, 3.6)}deg) brightness(${fmt(4)}%) contrast(${fmt(5)}%);`;\n  }\n}\n\nfunction hexToRgb(hex) {\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, (m, r, g, b) => {\n    return r + r + g + g + b + b;\n  });\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : null;\n}\nconst ChangePngColor = _ref => {\n  let {\n    background\n  } = _ref;\n  const rgb = hexToRgb(background);\n  const color = new Color(rgb[0], rgb[1], rgb[2]);\n  const solver = new Solver(color);\n  const result = solver.solve();\n  const filter = result.filter;\n  console.log(filter);\n  const TestArrow = styled.img`\n\n      height: 32px;\n      filter: invert(${filter[0]}%) \n              sepia(${filter[1]}%) \n              saturate(${filter[2]}%) \n              hue-rotate(${filter[3]}deg) \n              brightness(${filter[4]}%) \n              contrast(${filter[5]}%);\n`;\n  return /*#__PURE__*/_jsxDEV(TestArrow, {\n    src: arrow,\n    alt: \"arrow\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n_c = ChangePngColor;\nexport default ChangePngColor;\nvar _c;\n$RefreshReg$(_c, \"ChangePngColor\");","map":{"version":3,"names":["arrow","styled","Color","constructor","r","g","b","set","toString","Math","round","clamp","hueRotate","angle","PI","sin","cos","multiply","grayscale","value","sepia","saturate","matrix","newR","newG","newB","brightness","linear","contrast","slope","intercept","invert","hsl","max","min","h","s","l","d","Solver","target","baseColor","targetHSL","reusedColor","solve","result","solveNarrow","solveWide","values","loss","filter","css","A","c","a","best","Infinity","i","initial","spsa","wide","A1","iters","alpha","gamma","bestLoss","deltas","Array","highArgs","lowArgs","k","ck","pow","random","lossDiff","ak","fix","slice","idx","filters","color","colorHSL","abs","fmt","multiplier","hexToRgb","hex","shorthandRegex","replace","m","exec","parseInt","ChangePngColor","background","rgb","solver","console","log","TestArrow","img"],"sources":["/Users/sunoo/Projects/Aiiim/src/components/css/changePngColor.js"],"sourcesContent":["//301줄 부터 컴포넌트\nimport arrow from '../../assets/mypageArrow.png'\nimport styled from 'styled-components'\n\nclass Color {\n  constructor(r, g, b) {\n    this.set(r, g, b);\n  }\n  \n  toString() {\n    return `rgb(${Math.round(this.r)}, ${Math.round(this.g)}, ${Math.round(this.b)})`;\n  }\n\n  set(r, g, b) {\n    this.r = this.clamp(r);\n    this.g = this.clamp(g);\n    this.b = this.clamp(b);\n  }\n\n  hueRotate(angle = 0) {\n    angle = angle / 180 * Math.PI;\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    this.multiply([\n      0.213 + cos * 0.787 - sin * 0.213,\n      0.715 - cos * 0.715 - sin * 0.715,\n      0.072 - cos * 0.072 + sin * 0.928,\n      0.213 - cos * 0.213 + sin * 0.143,\n      0.715 + cos * 0.285 + sin * 0.140,\n      0.072 - cos * 0.072 - sin * 0.283,\n      0.213 - cos * 0.213 - sin * 0.787,\n      0.715 - cos * 0.715 + sin * 0.715,\n      0.072 + cos * 0.928 + sin * 0.072,\n    ]);\n  }\n\n  grayscale(value = 1) {\n    this.multiply([\n      0.2126 + 0.7874 * (1 - value),\n      0.7152 - 0.7152 * (1 - value),\n      0.0722 - 0.0722 * (1 - value),\n      0.2126 - 0.2126 * (1 - value),\n      0.7152 + 0.2848 * (1 - value),\n      0.0722 - 0.0722 * (1 - value),\n      0.2126 - 0.2126 * (1 - value),\n      0.7152 - 0.7152 * (1 - value),\n      0.0722 + 0.9278 * (1 - value),\n    ]);\n  }\n\n  sepia(value = 1) {\n    this.multiply([\n      0.393 + 0.607 * (1 - value),\n      0.769 - 0.769 * (1 - value),\n      0.189 - 0.189 * (1 - value),\n      0.349 - 0.349 * (1 - value),\n      0.686 + 0.314 * (1 - value),\n      0.168 - 0.168 * (1 - value),\n      0.272 - 0.272 * (1 - value),\n      0.534 - 0.534 * (1 - value),\n      0.131 + 0.869 * (1 - value),\n    ]);\n  }\n\n  saturate(value = 1) {\n    this.multiply([\n      0.213 + 0.787 * value,\n      0.715 - 0.715 * value,\n      0.072 - 0.072 * value,\n      0.213 - 0.213 * value,\n      0.715 + 0.285 * value,\n      0.072 - 0.072 * value,\n      0.213 - 0.213 * value,\n      0.715 - 0.715 * value,\n      0.072 + 0.928 * value,\n    ]);\n  }\n\n  multiply(matrix) {\n    const newR = this.clamp(this.r * matrix[0] + this.g * matrix[1] + this.b * matrix[2]);\n    const newG = this.clamp(this.r * matrix[3] + this.g * matrix[4] + this.b * matrix[5]);\n    const newB = this.clamp(this.r * matrix[6] + this.g * matrix[7] + this.b * matrix[8]);\n    this.r = newR;\n    this.g = newG;\n    this.b = newB;\n  }\n\n  brightness(value = 1) {\n    this.linear(value);\n  }\n  contrast(value = 1) {\n    this.linear(value, -(0.5 * value) + 0.5);\n  }\n\n  linear(slope = 1, intercept = 0) {\n    this.r = this.clamp(this.r * slope + intercept * 255);\n    this.g = this.clamp(this.g * slope + intercept * 255);\n    this.b = this.clamp(this.b * slope + intercept * 255);\n  }\n\n  invert(value = 1) {\n    this.r = this.clamp((value + this.r / 255 * (1 - 2 * value)) * 255);\n    this.g = this.clamp((value + this.g / 255 * (1 - 2 * value)) * 255);\n    this.b = this.clamp((value + this.b / 255 * (1 - 2 * value)) * 255);\n  }\n\n  hsl() {\n    // Code taken from https://stackoverflow.com/a/9493060/2688027, licensed under CC BY-SA.\n    const r = this.r / 255;\n    const g = this.g / 255;\n    const b = this.b / 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h, s, l = (max + min) / 2;\n\n    if (max === min) {\n      h = s = 0;\n    } else {\n      const d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / d + 2;\n          break;\n\n        case b:\n          h = (r - g) / d + 4;\n          break;\n        \n        default: //일단 넣어둠\n          h = 0\n      }\n      h /= 6;\n    }\n\n    return {\n      h: h * 100,\n      s: s * 100,\n      l: l * 100,\n    };\n  }\n\n  clamp(value) {\n    if (value > 255) {\n      value = 255;\n    } else if (value < 0) {\n      value = 0;\n    }\n    return value;\n  }\n}\n\nclass Solver {\n  constructor(target, baseColor) {\n    this.target = target;\n    this.targetHSL = target.hsl();\n    this.reusedColor = new Color(0, 0, 0);\n  }\n\n  solve() {\n    const result = this.solveNarrow(this.solveWide());\n\n    return {\n      values: result.values,\n      loss: result.loss,\n      filter: this.css(result.values),\n    };\n  }\n\n  solveWide() {\n    const A = 5;\n    const c = 15;\n    const a = [60, 180, 18000, 600, 1.2, 1.2];\n\n    let best = { loss: Infinity };\n    for (let i = 0; best.loss > 25 && i < 3; i++) {\n      const initial = [50, 20, 3750, 50, 100, 100];\n      const result = this.spsa(A, a, c, initial, 1000);\n      if (result.loss < best.loss) {\n        best = result;\n      }\n    }\n    return best;\n  }\n\n  solveNarrow(wide) {\n    const A = wide.loss;\n    const c = 2;\n    const A1 = A + 1;\n    const a = [0.25 * A1, 0.25 * A1, A1, 0.25 * A1, 0.2 * A1, 0.2 * A1];\n    return this.spsa(A, a, c, wide.values, 500);\n  }\n\n  spsa(A, a, c, values, iters) {\n    const alpha = 1;\n    const gamma = 0.16666666666666666;\n\n    let best = null;\n    let bestLoss = Infinity;\n    const deltas = new Array(6);\n    const highArgs = new Array(6);\n    const lowArgs = new Array(6);\n\n    for (let k = 0; k < iters; k++) {\n      const ck = c / Math.pow(k + 1, gamma);\n      for (let i = 0; i < 6; i++) {\n        deltas[i] = Math.random() > 0.5 ? 1 : -1;\n        highArgs[i] = values[i] + ck * deltas[i];\n        lowArgs[i] = values[i] - ck * deltas[i];\n      }\n\n      const lossDiff = this.loss(highArgs) - this.loss(lowArgs);\n      for (let i = 0; i < 6; i++) {\n        const g = lossDiff / (2 * ck) * deltas[i];\n        const ak = a[i] / Math.pow(A + k + 1, alpha);\n        values[i] = fix(values[i] - ak * g, i);\n      }\n\n      const loss = this.loss(values);\n      if (loss < bestLoss) {\n        best = values.slice(0);\n        bestLoss = loss;\n      }\n    }\n    return { values: best, loss: bestLoss };\n\n    function fix(value, idx) {\n      let max = 100;\n      if (idx === 2 /* saturate */) {\n        max = 7500;\n      } else if (idx === 4 /* brightness */ || idx === 5 /* contrast */) {\n        max = 200;\n      }\n\n      if (idx === 3 /* hue-rotate */) {\n        if (value > max) {\n          value %= max;\n        } else if (value < 0) {\n          value = max + value % max;\n        }\n      } else if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n      return value;\n    }\n  }\n\n  loss(filters) {\n    // Argument is array of percentages.\n    const color = this.reusedColor;\n    color.set(0, 0, 0);\n\n    color.invert(filters[0] / 100);\n    color.sepia(filters[1] / 100);\n    color.saturate(filters[2] / 100);\n    color.hueRotate(filters[3] * 3.6);\n    color.brightness(filters[4] / 100);\n    color.contrast(filters[5] / 100);\n\n    const colorHSL = color.hsl();\n    return (\n      Math.abs(color.r - this.target.r) +\n      Math.abs(color.g - this.target.g) +\n      Math.abs(color.b - this.target.b) +\n      Math.abs(colorHSL.h - this.targetHSL.h) +\n      Math.abs(colorHSL.s - this.targetHSL.s) +\n      Math.abs(colorHSL.l - this.targetHSL.l)\n    );\n  }\n\n  css(filters) {\n    function fmt(idx, multiplier = 1) {\n      return Math.round(filters[idx] * multiplier);\n    }\n    return [fmt(0), fmt(1), fmt(2), fmt(3), fmt(4), fmt(5)]\n    //`filter: invert(${fmt(0)}%) sepia(${fmt(1)}%) saturate(${fmt(2)}%) hue-rotate(${fmt(3, 3.6)}deg) brightness(${fmt(4)}%) contrast(${fmt(5)}%);`;\n  }\n}\n\nfunction hexToRgb(hex) {\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, (m, r, g, b) => {\n    return r + r + g + g + b + b;\n  });\n\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? [\n      parseInt(result[1], 16),\n      parseInt(result[2], 16),\n      parseInt(result[3], 16),\n    ]\n    : null;\n}\n\nconst ChangePngColor = ({background}) => {\n\n\n  const rgb = hexToRgb(background)\n\n  const color = new Color(rgb[0], rgb[1], rgb[2]);\n  const solver = new Solver(color);\n  const result = solver.solve();\n  const filter = result.filter\n\n  console.log(filter)\n  const TestArrow = styled.img`\n\n      height: 32px;\n      filter: invert(${filter[0]}%) \n              sepia(${filter[1]}%) \n              saturate(${filter[2]}%) \n              hue-rotate(${filter[3]}deg) \n              brightness(${filter[4]}%) \n              contrast(${filter[5]}%);\n`\n\n  return (\n    <TestArrow  src={arrow}  alt='arrow' />\n  )\n}\n\nexport default ChangePngColor\n\n\n\n\n  \n  \n\n\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,8BAA8B;AAChD,OAAOC,MAAM,MAAM,mBAAmB;AAAA;AAEtC,MAAMC,KAAK,CAAC;EACVC,WAAW,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;IACnB,IAAI,CAACC,GAAG,CAACH,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;EACnB;EAEAE,QAAQ,GAAG;IACT,OAAQ,OAAMC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACN,CAAC,CAAE,KAAIK,IAAI,CAACC,KAAK,CAAC,IAAI,CAACL,CAAC,CAAE,KAAII,IAAI,CAACC,KAAK,CAAC,IAAI,CAACJ,CAAC,CAAE,GAAE;EACnF;EAEAC,GAAG,CAACH,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;IACX,IAAI,CAACF,CAAC,GAAG,IAAI,CAACO,KAAK,CAACP,CAAC,CAAC;IACtB,IAAI,CAACC,CAAC,GAAG,IAAI,CAACM,KAAK,CAACN,CAAC,CAAC;IACtB,IAAI,CAACC,CAAC,GAAG,IAAI,CAACK,KAAK,CAACL,CAAC,CAAC;EACxB;EAEAM,SAAS,GAAY;IAAA,IAAXC,KAAK,uEAAG,CAAC;IACjBA,KAAK,GAAGA,KAAK,GAAG,GAAG,GAAGJ,IAAI,CAACK,EAAE;IAC7B,MAAMC,GAAG,GAAGN,IAAI,CAACM,GAAG,CAACF,KAAK,CAAC;IAC3B,MAAMG,GAAG,GAAGP,IAAI,CAACO,GAAG,CAACH,KAAK,CAAC;IAE3B,IAAI,CAACI,QAAQ,CAAC,CACZ,KAAK,GAAGD,GAAG,GAAG,KAAK,GAAGD,GAAG,GAAG,KAAK,EACjC,KAAK,GAAGC,GAAG,GAAG,KAAK,GAAGD,GAAG,GAAG,KAAK,EACjC,KAAK,GAAGC,GAAG,GAAG,KAAK,GAAGD,GAAG,GAAG,KAAK,EACjC,KAAK,GAAGC,GAAG,GAAG,KAAK,GAAGD,GAAG,GAAG,KAAK,EACjC,KAAK,GAAGC,GAAG,GAAG,KAAK,GAAGD,GAAG,GAAG,KAAK,EACjC,KAAK,GAAGC,GAAG,GAAG,KAAK,GAAGD,GAAG,GAAG,KAAK,EACjC,KAAK,GAAGC,GAAG,GAAG,KAAK,GAAGD,GAAG,GAAG,KAAK,EACjC,KAAK,GAAGC,GAAG,GAAG,KAAK,GAAGD,GAAG,GAAG,KAAK,EACjC,KAAK,GAAGC,GAAG,GAAG,KAAK,GAAGD,GAAG,GAAG,KAAK,CAClC,CAAC;EACJ;EAEAG,SAAS,GAAY;IAAA,IAAXC,KAAK,uEAAG,CAAC;IACjB,IAAI,CAACF,QAAQ,CAAC,CACZ,MAAM,GAAG,MAAM,IAAI,CAAC,GAAGE,KAAK,CAAC,EAC7B,MAAM,GAAG,MAAM,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC7B,MAAM,GAAG,MAAM,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC7B,MAAM,GAAG,MAAM,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC7B,MAAM,GAAG,MAAM,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC7B,MAAM,GAAG,MAAM,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC7B,MAAM,GAAG,MAAM,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC7B,MAAM,GAAG,MAAM,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC7B,MAAM,GAAG,MAAM,IAAI,CAAC,GAAGA,KAAK,CAAC,CAC9B,CAAC;EACJ;EAEAC,KAAK,GAAY;IAAA,IAAXD,KAAK,uEAAG,CAAC;IACb,IAAI,CAACF,QAAQ,CAAC,CACZ,KAAK,GAAG,KAAK,IAAI,CAAC,GAAGE,KAAK,CAAC,EAC3B,KAAK,GAAG,KAAK,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC3B,KAAK,GAAG,KAAK,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC3B,KAAK,GAAG,KAAK,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC3B,KAAK,GAAG,KAAK,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC3B,KAAK,GAAG,KAAK,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC3B,KAAK,GAAG,KAAK,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC3B,KAAK,GAAG,KAAK,IAAI,CAAC,GAAGA,KAAK,CAAC,EAC3B,KAAK,GAAG,KAAK,IAAI,CAAC,GAAGA,KAAK,CAAC,CAC5B,CAAC;EACJ;EAEAE,QAAQ,GAAY;IAAA,IAAXF,KAAK,uEAAG,CAAC;IAChB,IAAI,CAACF,QAAQ,CAAC,CACZ,KAAK,GAAG,KAAK,GAAGE,KAAK,EACrB,KAAK,GAAG,KAAK,GAAGA,KAAK,EACrB,KAAK,GAAG,KAAK,GAAGA,KAAK,EACrB,KAAK,GAAG,KAAK,GAAGA,KAAK,EACrB,KAAK,GAAG,KAAK,GAAGA,KAAK,EACrB,KAAK,GAAG,KAAK,GAAGA,KAAK,EACrB,KAAK,GAAG,KAAK,GAAGA,KAAK,EACrB,KAAK,GAAG,KAAK,GAAGA,KAAK,EACrB,KAAK,GAAG,KAAK,GAAGA,KAAK,CACtB,CAAC;EACJ;EAEAF,QAAQ,CAACK,MAAM,EAAE;IACf,MAAMC,IAAI,GAAG,IAAI,CAACZ,KAAK,CAAC,IAAI,CAACP,CAAC,GAAGkB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACjB,CAAC,GAAGiB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAChB,CAAC,GAAGgB,MAAM,CAAC,CAAC,CAAC,CAAC;IACrF,MAAME,IAAI,GAAG,IAAI,CAACb,KAAK,CAAC,IAAI,CAACP,CAAC,GAAGkB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACjB,CAAC,GAAGiB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAChB,CAAC,GAAGgB,MAAM,CAAC,CAAC,CAAC,CAAC;IACrF,MAAMG,IAAI,GAAG,IAAI,CAACd,KAAK,CAAC,IAAI,CAACP,CAAC,GAAGkB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACjB,CAAC,GAAGiB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAChB,CAAC,GAAGgB,MAAM,CAAC,CAAC,CAAC,CAAC;IACrF,IAAI,CAAClB,CAAC,GAAGmB,IAAI;IACb,IAAI,CAAClB,CAAC,GAAGmB,IAAI;IACb,IAAI,CAAClB,CAAC,GAAGmB,IAAI;EACf;EAEAC,UAAU,GAAY;IAAA,IAAXP,KAAK,uEAAG,CAAC;IAClB,IAAI,CAACQ,MAAM,CAACR,KAAK,CAAC;EACpB;EACAS,QAAQ,GAAY;IAAA,IAAXT,KAAK,uEAAG,CAAC;IAChB,IAAI,CAACQ,MAAM,CAACR,KAAK,EAAE,EAAE,GAAG,GAAGA,KAAK,CAAC,GAAG,GAAG,CAAC;EAC1C;EAEAQ,MAAM,GAA2B;IAAA,IAA1BE,KAAK,uEAAG,CAAC;IAAA,IAAEC,SAAS,uEAAG,CAAC;IAC7B,IAAI,CAAC1B,CAAC,GAAG,IAAI,CAACO,KAAK,CAAC,IAAI,CAACP,CAAC,GAAGyB,KAAK,GAAGC,SAAS,GAAG,GAAG,CAAC;IACrD,IAAI,CAACzB,CAAC,GAAG,IAAI,CAACM,KAAK,CAAC,IAAI,CAACN,CAAC,GAAGwB,KAAK,GAAGC,SAAS,GAAG,GAAG,CAAC;IACrD,IAAI,CAACxB,CAAC,GAAG,IAAI,CAACK,KAAK,CAAC,IAAI,CAACL,CAAC,GAAGuB,KAAK,GAAGC,SAAS,GAAG,GAAG,CAAC;EACvD;EAEAC,MAAM,GAAY;IAAA,IAAXZ,KAAK,uEAAG,CAAC;IACd,IAAI,CAACf,CAAC,GAAG,IAAI,CAACO,KAAK,CAAC,CAACQ,KAAK,GAAG,IAAI,CAACf,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAGe,KAAK,CAAC,IAAI,GAAG,CAAC;IACnE,IAAI,CAACd,CAAC,GAAG,IAAI,CAACM,KAAK,CAAC,CAACQ,KAAK,GAAG,IAAI,CAACd,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAGc,KAAK,CAAC,IAAI,GAAG,CAAC;IACnE,IAAI,CAACb,CAAC,GAAG,IAAI,CAACK,KAAK,CAAC,CAACQ,KAAK,GAAG,IAAI,CAACb,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAGa,KAAK,CAAC,IAAI,GAAG,CAAC;EACrE;EAEAa,GAAG,GAAG;IACJ;IACA,MAAM5B,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,GAAG;IACtB,MAAMC,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,GAAG;IACtB,MAAMC,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,GAAG;IACtB,MAAM2B,GAAG,GAAGxB,IAAI,CAACwB,GAAG,CAAC7B,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;IAC7B,MAAM4B,GAAG,GAAGzB,IAAI,CAACyB,GAAG,CAAC9B,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;IAC7B,IAAI6B,CAAC;MAAEC,CAAC;MAAEC,CAAC,GAAG,CAACJ,GAAG,GAAGC,GAAG,IAAI,CAAC;IAE7B,IAAID,GAAG,KAAKC,GAAG,EAAE;MACfC,CAAC,GAAGC,CAAC,GAAG,CAAC;IACX,CAAC,MAAM;MACL,MAAME,CAAC,GAAGL,GAAG,GAAGC,GAAG;MACnBE,CAAC,GAAGC,CAAC,GAAG,GAAG,GAAGC,CAAC,IAAI,CAAC,GAAGL,GAAG,GAAGC,GAAG,CAAC,GAAGI,CAAC,IAAIL,GAAG,GAAGC,GAAG,CAAC;MACnD,QAAQD,GAAG;QACT,KAAK7B,CAAC;UACJ+B,CAAC,GAAG,CAAC9B,CAAC,GAAGC,CAAC,IAAIgC,CAAC,IAAIjC,CAAC,GAAGC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UACjC;QAEF,KAAKD,CAAC;UACJ8B,CAAC,GAAG,CAAC7B,CAAC,GAAGF,CAAC,IAAIkC,CAAC,GAAG,CAAC;UACnB;QAEF,KAAKhC,CAAC;UACJ6B,CAAC,GAAG,CAAC/B,CAAC,GAAGC,CAAC,IAAIiC,CAAC,GAAG,CAAC;UACnB;QAEF;UAAS;UACPH,CAAC,GAAG,CAAC;MAAA;MAETA,CAAC,IAAI,CAAC;IACR;IAEA,OAAO;MACLA,CAAC,EAAEA,CAAC,GAAG,GAAG;MACVC,CAAC,EAAEA,CAAC,GAAG,GAAG;MACVC,CAAC,EAAEA,CAAC,GAAG;IACT,CAAC;EACH;EAEA1B,KAAK,CAACQ,KAAK,EAAE;IACX,IAAIA,KAAK,GAAG,GAAG,EAAE;MACfA,KAAK,GAAG,GAAG;IACb,CAAC,MAAM,IAAIA,KAAK,GAAG,CAAC,EAAE;MACpBA,KAAK,GAAG,CAAC;IACX;IACA,OAAOA,KAAK;EACd;AACF;AAEA,MAAMoB,MAAM,CAAC;EACXpC,WAAW,CAACqC,MAAM,EAAEC,SAAS,EAAE;IAC7B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACE,SAAS,GAAGF,MAAM,CAACR,GAAG,EAAE;IAC7B,IAAI,CAACW,WAAW,GAAG,IAAIzC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvC;EAEA0C,KAAK,GAAG;IACN,MAAMC,MAAM,GAAG,IAAI,CAACC,WAAW,CAAC,IAAI,CAACC,SAAS,EAAE,CAAC;IAEjD,OAAO;MACLC,MAAM,EAAEH,MAAM,CAACG,MAAM;MACrBC,IAAI,EAAEJ,MAAM,CAACI,IAAI;MACjBC,MAAM,EAAE,IAAI,CAACC,GAAG,CAACN,MAAM,CAACG,MAAM;IAChC,CAAC;EACH;EAEAD,SAAS,GAAG;IACV,MAAMK,CAAC,GAAG,CAAC;IACX,MAAMC,CAAC,GAAG,EAAE;IACZ,MAAMC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAEzC,IAAIC,IAAI,GAAG;MAAEN,IAAI,EAAEO;IAAS,CAAC;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEF,IAAI,CAACN,IAAI,GAAG,EAAE,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC5C,MAAMC,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAC5C,MAAMb,MAAM,GAAG,IAAI,CAACc,IAAI,CAACP,CAAC,EAAEE,CAAC,EAAED,CAAC,EAAEK,OAAO,EAAE,IAAI,CAAC;MAChD,IAAIb,MAAM,CAACI,IAAI,GAAGM,IAAI,CAACN,IAAI,EAAE;QAC3BM,IAAI,GAAGV,MAAM;MACf;IACF;IACA,OAAOU,IAAI;EACb;EAEAT,WAAW,CAACc,IAAI,EAAE;IAChB,MAAMR,CAAC,GAAGQ,IAAI,CAACX,IAAI;IACnB,MAAMI,CAAC,GAAG,CAAC;IACX,MAAMQ,EAAE,GAAGT,CAAC,GAAG,CAAC;IAChB,MAAME,CAAC,GAAG,CAAC,IAAI,GAAGO,EAAE,EAAE,IAAI,GAAGA,EAAE,EAAEA,EAAE,EAAE,IAAI,GAAGA,EAAE,EAAE,GAAG,GAAGA,EAAE,EAAE,GAAG,GAAGA,EAAE,CAAC;IACnE,OAAO,IAAI,CAACF,IAAI,CAACP,CAAC,EAAEE,CAAC,EAAED,CAAC,EAAEO,IAAI,CAACZ,MAAM,EAAE,GAAG,CAAC;EAC7C;EAEAW,IAAI,CAACP,CAAC,EAAEE,CAAC,EAAED,CAAC,EAAEL,MAAM,EAAEc,KAAK,EAAE;IAC3B,MAAMC,KAAK,GAAG,CAAC;IACf,MAAMC,KAAK,GAAG,mBAAmB;IAEjC,IAAIT,IAAI,GAAG,IAAI;IACf,IAAIU,QAAQ,GAAGT,QAAQ;IACvB,MAAMU,MAAM,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC;IAC3B,MAAMC,QAAQ,GAAG,IAAID,KAAK,CAAC,CAAC,CAAC;IAC7B,MAAME,OAAO,GAAG,IAAIF,KAAK,CAAC,CAAC,CAAC;IAE5B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,EAAEQ,CAAC,EAAE,EAAE;MAC9B,MAAMC,EAAE,GAAGlB,CAAC,GAAG5C,IAAI,CAAC+D,GAAG,CAACF,CAAC,GAAG,CAAC,EAAEN,KAAK,CAAC;MACrC,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1BS,MAAM,CAACT,CAAC,CAAC,GAAGhD,IAAI,CAACgE,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACxCL,QAAQ,CAACX,CAAC,CAAC,GAAGT,MAAM,CAACS,CAAC,CAAC,GAAGc,EAAE,GAAGL,MAAM,CAACT,CAAC,CAAC;QACxCY,OAAO,CAACZ,CAAC,CAAC,GAAGT,MAAM,CAACS,CAAC,CAAC,GAAGc,EAAE,GAAGL,MAAM,CAACT,CAAC,CAAC;MACzC;MAEA,MAAMiB,QAAQ,GAAG,IAAI,CAACzB,IAAI,CAACmB,QAAQ,CAAC,GAAG,IAAI,CAACnB,IAAI,CAACoB,OAAO,CAAC;MACzD,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,MAAMpD,CAAC,GAAGqE,QAAQ,IAAI,CAAC,GAAGH,EAAE,CAAC,GAAGL,MAAM,CAACT,CAAC,CAAC;QACzC,MAAMkB,EAAE,GAAGrB,CAAC,CAACG,CAAC,CAAC,GAAGhD,IAAI,CAAC+D,GAAG,CAACpB,CAAC,GAAGkB,CAAC,GAAG,CAAC,EAAEP,KAAK,CAAC;QAC5Cf,MAAM,CAACS,CAAC,CAAC,GAAGmB,GAAG,CAAC5B,MAAM,CAACS,CAAC,CAAC,GAAGkB,EAAE,GAAGtE,CAAC,EAAEoD,CAAC,CAAC;MACxC;MAEA,MAAMR,IAAI,GAAG,IAAI,CAACA,IAAI,CAACD,MAAM,CAAC;MAC9B,IAAIC,IAAI,GAAGgB,QAAQ,EAAE;QACnBV,IAAI,GAAGP,MAAM,CAAC6B,KAAK,CAAC,CAAC,CAAC;QACtBZ,QAAQ,GAAGhB,IAAI;MACjB;IACF;IACA,OAAO;MAAED,MAAM,EAAEO,IAAI;MAAEN,IAAI,EAAEgB;IAAS,CAAC;IAEvC,SAASW,GAAG,CAACzD,KAAK,EAAE2D,GAAG,EAAE;MACvB,IAAI7C,GAAG,GAAG,GAAG;MACb,IAAI6C,GAAG,KAAK,CAAC,CAAC,gBAAgB;QAC5B7C,GAAG,GAAG,IAAI;MACZ,CAAC,MAAM,IAAI6C,GAAG,KAAK,CAAC,CAAC,oBAAoBA,GAAG,KAAK,CAAC,CAAC,gBAAgB;QACjE7C,GAAG,GAAG,GAAG;MACX;MAEA,IAAI6C,GAAG,KAAK,CAAC,CAAC,kBAAkB;QAC9B,IAAI3D,KAAK,GAAGc,GAAG,EAAE;UACfd,KAAK,IAAIc,GAAG;QACd,CAAC,MAAM,IAAId,KAAK,GAAG,CAAC,EAAE;UACpBA,KAAK,GAAGc,GAAG,GAAGd,KAAK,GAAGc,GAAG;QAC3B;MACF,CAAC,MAAM,IAAId,KAAK,GAAG,CAAC,EAAE;QACpBA,KAAK,GAAG,CAAC;MACX,CAAC,MAAM,IAAIA,KAAK,GAAGc,GAAG,EAAE;QACtBd,KAAK,GAAGc,GAAG;MACb;MACA,OAAOd,KAAK;IACd;EACF;EAEA8B,IAAI,CAAC8B,OAAO,EAAE;IACZ;IACA,MAAMC,KAAK,GAAG,IAAI,CAACrC,WAAW;IAC9BqC,KAAK,CAACzE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAElByE,KAAK,CAACjD,MAAM,CAACgD,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAC9BC,KAAK,CAAC5D,KAAK,CAAC2D,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAC7BC,KAAK,CAAC3D,QAAQ,CAAC0D,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAChCC,KAAK,CAACpE,SAAS,CAACmE,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACjCC,KAAK,CAACtD,UAAU,CAACqD,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAClCC,KAAK,CAACpD,QAAQ,CAACmD,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAEhC,MAAME,QAAQ,GAAGD,KAAK,CAAChD,GAAG,EAAE;IAC5B,OACEvB,IAAI,CAACyE,GAAG,CAACF,KAAK,CAAC5E,CAAC,GAAG,IAAI,CAACoC,MAAM,CAACpC,CAAC,CAAC,GACjCK,IAAI,CAACyE,GAAG,CAACF,KAAK,CAAC3E,CAAC,GAAG,IAAI,CAACmC,MAAM,CAACnC,CAAC,CAAC,GACjCI,IAAI,CAACyE,GAAG,CAACF,KAAK,CAAC1E,CAAC,GAAG,IAAI,CAACkC,MAAM,CAAClC,CAAC,CAAC,GACjCG,IAAI,CAACyE,GAAG,CAACD,QAAQ,CAAC9C,CAAC,GAAG,IAAI,CAACO,SAAS,CAACP,CAAC,CAAC,GACvC1B,IAAI,CAACyE,GAAG,CAACD,QAAQ,CAAC7C,CAAC,GAAG,IAAI,CAACM,SAAS,CAACN,CAAC,CAAC,GACvC3B,IAAI,CAACyE,GAAG,CAACD,QAAQ,CAAC5C,CAAC,GAAG,IAAI,CAACK,SAAS,CAACL,CAAC,CAAC;EAE3C;EAEAc,GAAG,CAAC4B,OAAO,EAAE;IACX,SAASI,GAAG,CAACL,GAAG,EAAkB;MAAA,IAAhBM,UAAU,uEAAG,CAAC;MAC9B,OAAO3E,IAAI,CAACC,KAAK,CAACqE,OAAO,CAACD,GAAG,CAAC,GAAGM,UAAU,CAAC;IAC9C;IACA,OAAO,CAACD,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC;IACvD;EACF;AACF;;AAEA,SAASE,QAAQ,CAACC,GAAG,EAAE;EACrB;EACA,MAAMC,cAAc,GAAG,kCAAkC;EACzDD,GAAG,GAAGA,GAAG,CAACE,OAAO,CAACD,cAAc,EAAE,CAACE,CAAC,EAAErF,CAAC,EAAEC,CAAC,EAAEC,CAAC,KAAK;IAChD,OAAOF,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC;EAC9B,CAAC,CAAC;EAEF,MAAMuC,MAAM,GAAG,2CAA2C,CAAC6C,IAAI,CAACJ,GAAG,CAAC;EACpE,OAAOzC,MAAM,GACT,CACA8C,QAAQ,CAAC9C,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EACvB8C,QAAQ,CAAC9C,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EACvB8C,QAAQ,CAAC9C,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CACxB,GACC,IAAI;AACV;AAEA,MAAM+C,cAAc,GAAG,QAAkB;EAAA,IAAjB;IAACC;EAAU,CAAC;EAGlC,MAAMC,GAAG,GAAGT,QAAQ,CAACQ,UAAU,CAAC;EAEhC,MAAMb,KAAK,GAAG,IAAI9E,KAAK,CAAC4F,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAMC,MAAM,GAAG,IAAIxD,MAAM,CAACyC,KAAK,CAAC;EAChC,MAAMnC,MAAM,GAAGkD,MAAM,CAACnD,KAAK,EAAE;EAC7B,MAAMM,MAAM,GAAGL,MAAM,CAACK,MAAM;EAE5B8C,OAAO,CAACC,GAAG,CAAC/C,MAAM,CAAC;EACnB,MAAMgD,SAAS,GAAGjG,MAAM,CAACkG,GAAI;AAC/B;AACA;AACA,uBAAuBjD,MAAM,CAAC,CAAC,CAAE;AACjC,sBAAsBA,MAAM,CAAC,CAAC,CAAE;AAChC,yBAAyBA,MAAM,CAAC,CAAC,CAAE;AACnC,2BAA2BA,MAAM,CAAC,CAAC,CAAE;AACrC,2BAA2BA,MAAM,CAAC,CAAC,CAAE;AACrC,yBAAyBA,MAAM,CAAC,CAAC,CAAE;AACnC,CAAC;EAEC,oBACE,QAAC,SAAS;IAAE,GAAG,EAAElD,KAAM;IAAE,GAAG,EAAC;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAE3C,CAAC;AAAA,KAzBK4F,cAAc;AA2BpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}